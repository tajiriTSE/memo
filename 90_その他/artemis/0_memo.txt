Ubuntuインストール　ARTEMISの環境構築
user:tajiri
pw:tajiri




■疑問
並び替えた順番をDBに保存する系、誰かが変えたらそうなっちゃう？ユーザーごと？→全ユーザー共通DBに保存する
命名規則はあるか？あったほうが良さそう→ない

■
依頼テンプレートは？
└名前と説明をマスタから表示するだけの機能で良い

------------------------------------------------

佐倉田くんがリーダー
加藤さん、須藤くん
こんたさんが5月　藤野さんの右
青木さんが6月

最初のコンボボックス　見積もりスケジュール

田尻が基本設計　今は雑なのしか無い
佐倉田くんが機能と詳細
改造も含め、既存機能も設計書に起こす
やりながら切り出してもらう

6月末までに手分けしてクリアできれば良い
工数というより期間
6月頭からテスト、全部じゃなくても切り出して行けるように製造を進める


------------------------------------------------
artemisについて

echo
GO言語でWebサーバを立ててくれるライブラり
エコーが起動したときのログを消している　ハイドバナー

e.なんたら　エチョに対して色々と設定をしている
s.Startでecho.startでエコーをスタートしている　webサーバーが始まる
s.startで処理は止まる、Serial通信のreadみたいな感じ？

echoに設定をしなきゃいけない　このURL二アクセスされたら、この関数を呼び出して下さい、を定義する
POSTという通信でｋのURLが呼ばれたら、この関数を呼ぶというのを登録している
レイヤードアキテクチャ　webサーバを階層を分けて作ろうという理念
ハンドラ層とサービス層にわかれている
クライアントからHTTPでアクセスがある、Handlerが受け取る、http通信の出入り口の処理だけかく
Serviceｊ：実際にデータなどを取得したり更新する処理
cmd:というパッケージ　main関数などアプリの始まりの処理
server:echoなどのウェbサーバーなどのデータを保持するクラスのようなもの
１．サーバーを作成
２．サービスを作成、３．ハンドラにサービスを渡しながら作成、４．ハンドラを設定

e.USE　ミドルウェアを登録
ミドルウェア、どのURLが呼ばれようが先に呼ばれる処理を定義する

index.vue

script　lang="ts"　タイプスクリプト

vue　カスタムコントロールみたいなのが出来る
componentsに保存しておくのが一般的
インポートすると、タグとして扱えるようになる
★★タグ、大文字始まりのパスカルケースにしておく

pageフォルダに入れて、templateタグだけあれば、ページとして認識される
script defineComponentは書く必要がある、importも必要

vueの拡張機能、：いれておくと便利、tsのエラーを出してくれる
pages　URLの一番先頭：とりあえずページの動きとかを試してみたいとき
requestとresponceでフォルダを分ける必要がある？：開発者がわかりやすいようにしているだけ、言語の決まりではない
データの変換は必要？　なんで変換必要？不要なデータを削除している、：開発者が～同上


------------------------------------------------

■機能設計
システムをどう部品わけするか

cmd
　開始　システム開始
　└HTTPサーバーを開始し、DB機能を使ってDB接続して、環境変数を読み込む
HTTPサーバー機能　通信の受付
Config　環境変数読み込み、
DB　接続　クエリ実行

handler　関数が並ぶ
サービス層　関数が並ぶ
　DBアクセス
minio　ファイルサーバ


基本設計を見ながらどうクラス分けをするのか、考えるのが機能設計

タイトル画面、メニューが何をするのかしらない
メニューを部品として表示しますよくらいになっているべき

タブ表示という機能
という１つのなかに、それぞれのコンポーネント使ってね

全体スケジュールの表示
全部の案件のタスクとかを渡す

authstore　ログイン情報管理オブジェクト
認証情報を持っている、ユーザー情報を持っている

ロジックまでは書かなくて良い


-----------------------------------------------
リリース
artemisのリリース
アルテミスのリリース手順メモにある

前回のコミットから差分を追いかける
コンフィgのフォルダ内、api_info.go
フロントはpackage.json
version　セマンテックバージョニング
交互の無い機能追加　今までの操作が使えない、交互五感がある機能　動作は変わる、不具合修正　動作は変わらない

バージョンあげたらビルドする
リリースページを作る
DraftNewRelease
タグを付ける、選んだブランチの最新だというタグを作る
タイトルもタグと同じで良い
説明欄に差分を記載

lanch_web_startは

リモート
10.215
work/work

------------------------------------------------

■設計についてのメモ


こんなデータがありますよね
を最初に考える、機能設計は次
カラム

基本から機能を作る

CUI
環境変数を読み込む、がよくわからない
設定読み込む機能がない
設定読み込む機能が、環境変数のことなら、それを決めてしまう
メインオブジェクトでやることは、環境変数がどうとか知らず、設定管理クラスがやる
～機能を使って～を開始するというのがいれば良い

こういう役割をもたせれば、今回のシステムが成り立つよね、というのを考えるのが機能設計

HTTPサーバがDBとMinioのオブジェクトを持っている

設定データは持たなくて良い
プロパティはその機能を成り立たせるための要素
～オブジェクト、データが主体、機能が主体、
何がほしいかを最初に考える、
設定がほしいな、だと設定のデータオブジェクト
こういう機能がほしいな、だとモジュールオブジェクト

・設定
設定がパブリックは

・HTTPサーバ
特定のURLが呼ばれたときに、ハンドラ層の処理が呼ばれるようにする
エンドポイントがどうとかは詳細設計で書けば良い、
機能設計はやりたいことがこうなんだよとかを書けば良い
抽象的な内容で良い
URLとポートをすべて含めてエンドポイント
Echoライブラリを使ってそれを実現する

・ハンドラそう
サービス層の呼び出す、に加えて
リクエストとレスポンスの処理をする
HTTPリクエストを受け取って、バリデーションをする、リクエストによってサービスを呼び出し、
サービスの結果をうけとってレスポンスを返す
という1つの機能の中に、こういうメソッドがいても良い

こんなことが出来ないと困るよというの機能設計にはあれば良い
DBを保つ必要が無い
※つけて、DBという書いてある場所、

■詳細設計

詳細設計にデータの形が決まっているのを定義する
HTTPリクエストとレスポンスは必要

案件取得なら、リクエストとレスポンスがあるだけ、DBレスポンスはいらない

呼び出すやつは全部カギカッコで書くなど、外のやつを呼び出しているかどうかをわかるようにする
処理の中にあるのか、他の処理を呼び出すのかわかりやすくする

・GetProject
HTTPリクエストの値を取得して、異常値だったらエラーを返す
Echoを使うならコンテキストバインドを使って、値チェックを使う
詳細設計の何処かにEchoオブジェクトを使うことを記載する
URLを書いて、これを使うこと

クエリパラメータがカンマ区切りになっていることがきまっているなら
カンマ区切りを配列に変換する、程度で良い　書くなら

・
ｇｇったら出てこないことを設計に各
ggって出てくるのは別に書かなくて良い


-------------------------------------------------------
■Step2全体動作確認で見つかった不具合一覧

案件一覧
・一般権限でも案件の並び替えができ、並べ替えを行うと500エラーになる
案件詳細-基本情報
・案件ステータス、見積もりステータス一文字ごとにバックスペースを押すと、最後の一文字が消えない
・案件詳細-ボード
色指定なしの時の色(FFFFFF)と、デフォルトの色が違う
マイページ
・期日をキーボード入力したときのタスクの動作が気になる
見積読み込み画面
・担当者を設定して保存した後、担当者を変えてキャンセルしても担当者が変わる
・前工程からの空きが表示されない
・全体スケジュールに追加されたタスクが長い（機能設計書の作成）


-------------------------------------------------------
■20241129　要望打ち合わせ

グラボ
nVIDIA A4000 16GB

NG画像データ取得、ちゃんとNGになるかという検証を行っている
画像の取得はTWで確認する

・マスタ画像
どれくらいのバリエーションなのかをTWで調査、検討する
・マスクエリア

・ハードウェア
2台→1台

環境構築はいつ？ミニコンだでやる？
└PCはなんでもよい
　TSEで使っているPCか、PEGで使っているPC、

GPU　A4000でやる　12・16はこれでやりたい
オプティプレックスにさしてつかえるか


■
通信の改造
環境構築

オフラインでのインストール
マニュアル類簡易版

■
1往復できたら提出する
ダミーデータで良い


-------------------------------------------------------

■宿題
１往復のIFアプリは提出した
通信の改造２往復、12/5目標、進めてる

■確認事項
１往復のIFアプリはどうだったか？　→確認中、OKだったら連絡くれる
グラボは借りられるか？回答はいつもらえるか、１週間前には欲しい　→　もう1セットある、TSEにお借りする、12/5木に
LETとの確認に向けた環境はどうする？パイトーチorチェイナー、グラボは？　→パイトーチ　RTX A4000
　新しいグラボいれるなら、パイトーチ置き換え必須　→そう
リファクタリングは無しで良い？　→なくなった
マニュアル作成に取り掛かりたい　→OK
１２／１０の検証はどのPC？　→パイトーチ用

■質問
マニュアル
　設定ファイル作成、手順以外の理論はどうするか　→　理論は別とする
　柴田さんから情報をもらってこちらで作成orTWで作る　
　画像集めなどの手順はどうするか、もらえるか　→　画像はこうやって集めるという空で良い
→　ユーザー向けのマニュアル
　
　量産稼働のマニュアルは？
→　手順内容をTWにご提示いただく


検証で使用するPC（12/10・16共用
　→パイトーチ向け
リファクタリング
　→なくなった
マニュアル
　→河西チームで取り掛かる
　→操作以外の理論部分はどうするか　→理論は範囲外とする
　→画像集めの手順はどうするか　→欄だけ作成し、中身は記載しない
　→量産稼働のアニュアルは？　→書くべき内容をご提示いただく
　→次回、目次まで作って提出する

-------------------------------------------------------

■質問事項
feature_valueの外部ツール、ライセンスあるか？マニュアルどうするか　→

12/16、間に合わなかったらどうするか

■直近のタスク
IFアプリの通信周りの改造を実施する

IFアプリの改造後の試験を実施する
新GPUが届き次第、新しいグラボで試す
運用に必要な手順を頂き、運用マニュアルを作成する


■
質問票を更新して送り直す

オフライン前提だという文言が必要
オフライン環境だから納品物のこれらをクリックして～みたいな手順にする

設定マニュアルの作り方、わからないところをまとめておく
台車を用意したほうが良いかも

■
12日　木曜日、１３：３０から
→14:30からになった

-------------------------------------------------------

■12/10　TWの事前検証

12/16どうしたいか
まずは通信をやりたい
次は５つの設定ファイルもある状況でやりたい
画像解析の内容は気にしなくてよいが、本番想定の設定類一式がある状態で通信が流れるかみたい
★★→一式を用意しておく、わからない情報を事前に聞く
└マスタ画像などは12/16に撮影するため、存在しない

■質問
試験すぐやったほうが良いか
試験、TSEではソフトウェア的な検証のみ、全体の業務的なのはない
└TSEではソフトウェア的なののみで良い
０を１６桁の話、一旦まちで良いか
GPUの入れ替えと検証はいつにするか？


エラーコード
LETは16bitの０１、で構成されている
今は解析アプリの結果をIF側からLETにかえしている、Error01など
└暫定で０を１６桁でかえす

★★レスポンス違いが多い、確認する、数値など

■
画像をLETからどうやってとるか
量産運用ではいらない、設定ファイルで作るときには必要

LETには画像が来る、馬場さんのPCにはある
自動モード、画像が保存される、送られてきたファイル名（VIN-YMTO）になっている
data>resource>css>analysis

★★マニュアルに不明点をかいていく

★★
VINーAIMINGIDー時刻、で１位に識別できるか？
AimingIDというのはラインが２つあり、どっちかの設備のID

■今のところ単眼モードのみで動いている　複眼はあんまり使わないはず

★★HiLimitがbluer forrgycheck threshould と同じなのか
LOWとHiは何なのか
マハラノビス距離の判定しきい値を返すべき

★★ReliabilityBoard、解析結果の値をそのままいれる

★★キュー、いつまでためる
一度GETがきてからもう一度GETが来る場合はある
POSTだけきてGETが来ない場合もある
→どちらにせよ結果をキューイングするのにタイムアウトを設ける、設定値化する
　LET側は画像処理の時間の２倍位をタイムアウトとしている


■
５つの設定ファイル類を一式用意する、欲しい情報を聞く
検証項目リストを作成する
画像集め、マニュアルに不明点を書いていく



■
１６桁のエラーコードどうするか
いまのところ単眼モードのみ




