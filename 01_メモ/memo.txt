- 見積もりに使うファイル
\\192.168.10.46\work\project\社内ルール、文書テンプレート\プロジェクトフォルダ構成ルール\案件フォルダ_ver2.0.0\02_見積もり\1_社内見積書
- アーカイブフォルダ
\\192.168.15.4\01 ティーエスイー\project\Libra

------------------------------------------------
■出町さん
トレサアプリ、打ち合わせの同席依頼


■定例会




-------------------------------------------------------
自分やること
★★ARTEMISの仕事を探す仕事
★★次回リリースの日程を決める、決めたら見塚さんへ連絡する


■作動プロマクロ
PC
Win11で動けば良い、Officeのverは？


-------------------------------------------------------
リファクタリング
１．名称の見直し
２．処理の見直し
３．ロジックの改善
４．手法の整理・改善
５．構造の見直し

■フロントエンド
１．名称の見直し
　ファイル名
　構造体名
　変数名
　オブジェクト名
　関数名
　定数名
　要素のid
　スタイルのクラス
　コメント
　リテラル文字
　データ値
誤字脱字がないか
英単語は適切か
命名規則は守られているか
名称が正しく対象物を指しているか
名称から用途・目的・意味が理解できるか
同じ物を指すが、異なる名称を使用していないか
異なるものをさすが、同じ名称を使用していないか
他との統一感が取れているか

２．処理の見直し
エラーが出ている箇所を解決
　$refs
　unknownまたはanyになっている型の明示
リテラル文字を定数化する、データ値のみで良い
多重の入れ子になっている値を変数化する
リアクティブ性の有無による使い分け

３．ロジックの改善
無駄・不適切な処理の流れを修正
仕様を理解して冗長な処理を整理し、簡素化かつ関数化する（スケジュールプレビューなど）
単純に可読性改善の目的で、UIとビジネスロジックを分離する、ミックスイン・カスタムフックを利用
並列処理の見直し、複数のAPI呼び出しを順次ではなく同時におこなう、PromiseAll

４．手法の整理・改善
CompositionAPIの理解・利用
　リアクティブな仕組みはOptionAPIから切り替える
カスタムフックの利用
　再利用性のあるコードをまとめる
　状態管理を分離する
　コントロールの処理はカスタムコントロールのようにする、工数欄の数値制御とか
　ポリモーフィズムの様な
　
　Loading、ダイアログ表示、コンテキストメニュー、データの入れ替え
ストアの利用
　全体で扱うデータ・機能をまとめる
　全体の状態管理を分離する
Computedの利用
　計算をしているプロパティはComputedに置き換える
　Mustacheで処理を実行または関数を呼んでいる場合は、Computedに置き換える
deferの利用
　DOMに依存するスクリプトを整理する
ライフサイクルの理解
　権限系の画面表示は、DOMマウント前に制御する
　描画後に、描画が変わるようなデータ取得をしない（案件一覧のタブなど）
v-bindの見直し

ミドルウェアの利用
　権限によるページ表示を制御する、前のページに戻す
　


５．構造の見直し
コンポーネントの分け方
コンポーネントをフォルダ分けする
データを持つ箇所、データの内容・状態などをコンポーネント単位で分解、整理する








